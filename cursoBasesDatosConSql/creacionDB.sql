-- Crear una base de datos

CREATE TABLE PRODUCTOS (
  PKPRODUCTO INT PRIMARY KEY,
  IDPRODUCTO VARCHAR(20), 
  DESCRIPCION TEXT
);


-- Crear la tabla de estudiantes 

CREATE TABLE STUDENTS (
  STUDENTID INT PRIMARY KEY,
  FIRSTNAME VARCHAR(50),
  LASTNAME VARCHAR(50),
  AGE INT,
  EMAIL VARCHAR(100),
  LOADDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATEDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Crear la tabla de instructores

CREATE TABLE INSTRUCTORS(
  INSTRUCTORID INT PRIMARY KEY,
  FIRSTNAME VARCHAR(50),
  LASTNAME VARCHAR(50),
  EMAIL VARCHAR(100),
  SPECIALITY VARCHAR(100), -- Especialidad del instructor
  HIREDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
  UPDATEDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Crear tabla de cursos

CREATE TABLE COURSES (
  COURSEID INT PRIMARY KEY,
  COURSENAME VARCHAR(100),
  DESCRIPTION TEXT,
  INSTRUCTORID INT, 
  DURATIONHOURS INT,
  LOAD_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (INSTRUCTORID) REFERENCES INSTRUCTORS(INSTRUCTORID)
);

-- Crear la tabla de relacionamiento entre estudiantes y cursos

CREATE TABLE STUDENT_COURSES (
  STUDENTID INT,
  COURSEID INT, 
  ENROLL_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (STUDENTID, COURSEID), --  juntos forman una clave primaria compuesta, lo que asegura que un estudiante no pueda inscribirse en el mismo curso m√°s de una vez.
  FOREIGN KEY (STUDENTID) REFERENCES STUDENTS(STUDENTID),
  FOREIGN KEY (COURSEID) REFERENCES COURSES(COURSEID)
);